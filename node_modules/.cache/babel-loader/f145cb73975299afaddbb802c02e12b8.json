{"ast":null,"code":"import React,{useState}from'react';import{useParams,useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResetarSenha=()=>{const{token}=useParams();const[newPassword,setNewPassword]=useState('');const[message,setMessage]=useState('');const navigate=useNavigate();// Hook para redirecionamento\nconst handleResetPassword=async e=>{e.preventDefault();if(!newPassword){setMessage('A nova senha é obrigatória.');return;}try{const response=await fetch(`http://localhost:3000/resetarSenha/${token}`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({password:newPassword})});const data=await response.json();if(response.ok){setMessage(data.message||'Senha redefinida com sucesso!');setTimeout(()=>navigate('/login'),3000);}else{setMessage(data.message||'Erro ao redefinir a senha.');}}catch(error){console.error('Erro ao redefinir a senha:',error);setMessage('Erro ao redefinir a senha. Tente novamente.');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Redefinir Senha\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleResetPassword,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"newPassword\",children:\"Nova Senha:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"newPassword\",value:newPassword,onChange:e=>setNewPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Redefinir Senha\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{children:message})]});};export default ResetarSenha;","map":{"version":3,"names":["React","useState","useParams","useNavigate","jsx","_jsx","jsxs","_jsxs","ResetarSenha","token","newPassword","setNewPassword","message","setMessage","navigate","handleResetPassword","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","password","data","json","ok","setTimeout","error","console","children","onSubmit","htmlFor","type","id","value","onChange","target","required"],"sources":["/home/redes/Gabriel_Raupp/TCC_90-FEITO/src/components/pages/ResetarSenha.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst ResetarSenha = () => {\n  const { token } = useParams();\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate(); // Hook para redirecionamento\n\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n\n    if (!newPassword) {\n      setMessage('A nova senha é obrigatória.');\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://localhost:3000/resetarSenha/${token}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ password: newPassword }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setMessage(data.message || 'Senha redefinida com sucesso!');\n        setTimeout(() => navigate('/login'), 3000); \n      } else {\n        setMessage(data.message || 'Erro ao redefinir a senha.');\n      }\n    } catch (error) {\n      console.error('Erro ao redefinir a senha:', error);\n      setMessage('Erro ao redefinir a senha. Tente novamente.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Redefinir Senha</h2>\n      <form onSubmit={handleResetPassword}>\n        <div>\n          <label htmlFor=\"newPassword\">Nova Senha:</label>\n          <input\n            type=\"password\"\n            id=\"newPassword\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Redefinir Senha</button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default ResetarSenha;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,SAAS,CAAEC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1D,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAEC,KAAM,CAAC,CAAGP,SAAS,CAAC,CAAC,CAC7B,KAAM,CAACQ,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAAAa,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAAE;AAEhC,KAAM,CAAAY,mBAAmB,CAAG,KAAO,CAAAC,CAAC,EAAK,CACvCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB,GAAI,CAACP,WAAW,CAAE,CAChBG,UAAU,CAAC,6BAA6B,CAAC,CACzC,OACF,CAEA,GAAI,CACF,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,sCAAsCV,KAAK,EAAE,CAAE,CAC1EW,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,QAAQ,CAAEf,WAAY,CAAC,CAChD,CAAC,CAAC,CAEF,KAAM,CAAAgB,IAAI,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAElC,GAAIT,QAAQ,CAACU,EAAE,CAAE,CACff,UAAU,CAACa,IAAI,CAACd,OAAO,EAAI,+BAA+B,CAAC,CAC3DiB,UAAU,CAAC,IAAMf,QAAQ,CAAC,QAAQ,CAAC,CAAE,IAAI,CAAC,CAC5C,CAAC,IAAM,CACLD,UAAU,CAACa,IAAI,CAACd,OAAO,EAAI,4BAA4B,CAAC,CAC1D,CACF,CAAE,MAAOkB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClDjB,UAAU,CAAC,6CAA6C,CAAC,CAC3D,CACF,CAAC,CAED,mBACEN,KAAA,QAAAyB,QAAA,eACE3B,IAAA,OAAA2B,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBzB,KAAA,SAAM0B,QAAQ,CAAElB,mBAAoB,CAAAiB,QAAA,eAClCzB,KAAA,QAAAyB,QAAA,eACE3B,IAAA,UAAO6B,OAAO,CAAC,aAAa,CAAAF,QAAA,CAAC,aAAW,CAAO,CAAC,cAChD3B,IAAA,UACE8B,IAAI,CAAC,UAAU,CACfC,EAAE,CAAC,aAAa,CAChBC,KAAK,CAAE3B,WAAY,CACnB4B,QAAQ,CAAGtB,CAAC,EAAKL,cAAc,CAACK,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE,CAChDG,QAAQ,MACT,CAAC,EACC,CAAC,cACNnC,IAAA,WAAQ8B,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,iBAAe,CAAQ,CAAC,EAC1C,CAAC,CACNpB,OAAO,eAAIP,IAAA,MAAA2B,QAAA,CAAIpB,OAAO,CAAI,CAAC,EACzB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}