{"ast":null,"code":"import React,{useState}from'react';import{useParams}from'react-router-dom';import styles from'./ResetarSenha.module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResetarSenha=()=>{const{token}=useParams();const[newPassword,setNewPassword]=useState('');const[showPassword,setShowPassword]=useState(false);// Estado para controlar visibilidade da senha\nconst[message,setMessage]=useState('');const handleResetPassword=async e=>{e.preventDefault();if(!newPassword){setMessage('A nova senha √© obrigat√≥ria.');return;}try{const response=await fetch(`http://localhost:3000/resetarSenha/${token}`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({password:newPassword})});const data=await response.json();if(response.ok){setMessage(data.message||'Senha redefinida com sucesso!');}else{setMessage(data.message||'Erro ao redefinir a senha.');}}catch(error){console.error('Erro ao redefinir a senha:',error);setMessage('Erro ao redefinir a senha. Tente novamente.');}};const togglePasswordVisibility=()=>{setShowPassword(!showPassword);// Alterna entre mostrar e esconder a senha\n};return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsx(\"h2\",{className:styles.title,children:\"Redefinir Senha\"}),/*#__PURE__*/_jsxs(\"form\",{className:styles.form,onSubmit:handleResetPassword,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.formGroup,children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,htmlFor:\"newPassword\",children:\"Nova Senha:\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.passwordWrapper,children:[/*#__PURE__*/_jsx(\"input\",{className:styles.input,type:showPassword?'text':'password'// Mostra ou esconde a senha\n,id:\"newPassword\",value:newPassword,onChange:e=>setNewPassword(e.target.value),required:true}),/*#__PURE__*/_jsxs(\"span\",{className:styles.passwordToggleIcon,onClick:togglePasswordVisibility,children:[showPassword?'üëÅÔ∏è':'üôà',\" \"]})]})]}),/*#__PURE__*/_jsx(\"button\",{className:styles.button,type:\"submit\",children:\"Redefinir Senha\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{className:styles.message,children:message})]});};export default ResetarSenha;","map":{"version":3,"names":["React","useState","useParams","styles","jsx","_jsx","jsxs","_jsxs","ResetarSenha","token","newPassword","setNewPassword","showPassword","setShowPassword","message","setMessage","handleResetPassword","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","password","data","json","ok","error","console","togglePasswordVisibility","className","container","children","title","form","onSubmit","formGroup","label","htmlFor","passwordWrapper","input","type","id","value","onChange","target","required","passwordToggleIcon","onClick","button"],"sources":["/home/redes/Gabriel_Raupp/TCC_Finalizado/src/components/pages/ResetarSenha.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './ResetarSenha.module.css';\n\nconst ResetarSenha = () => {\n  const { token } = useParams(); \n  const [newPassword, setNewPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false); // Estado para controlar visibilidade da senha\n  const [message, setMessage] = useState('');\n\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n  \n    if (!newPassword) {\n      setMessage('A nova senha √© obrigat√≥ria.');\n      return;\n    }\n  \n    try {\n      const response = await fetch(`http://localhost:3000/resetarSenha/${token}`, { \n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ password: newPassword }),\n      });\n  \n      const data = await response.json();\n  \n      if (response.ok) {\n        setMessage(data.message || 'Senha redefinida com sucesso!');\n      } else {\n        setMessage(data.message || 'Erro ao redefinir a senha.');\n      }\n    } catch (error) {\n      console.error('Erro ao redefinir a senha:', error);\n      setMessage('Erro ao redefinir a senha. Tente novamente.');\n    }\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword); // Alterna entre mostrar e esconder a senha\n  };\n  \n  return (\n    <div className={styles.container}>\n      <h2 className={styles.title}>Redefinir Senha</h2>\n      <form className={styles.form} onSubmit={handleResetPassword}>\n        <div className={styles.formGroup}>\n          <label className={styles.label} htmlFor=\"newPassword\">Nova Senha:</label>\n          <div className={styles.passwordWrapper}>\n            <input\n              className={styles.input}\n              type={showPassword ? 'text' : 'password'} // Mostra ou esconde a senha\n              id=\"newPassword\"\n              value={newPassword}\n              onChange={(e) => setNewPassword(e.target.value)}\n              required\n            />\n            <span\n              className={styles.passwordToggleIcon}\n              onClick={togglePasswordVisibility}\n            >\n              {showPassword ? 'üëÅÔ∏è' : 'üôà'} {/* √çcone de mostrar/esconder senha */}\n            </span>\n          </div>\n        </div>\n        <button className={styles.button} type=\"submit\">Redefinir Senha</button>\n      </form>\n      {message && <p className={styles.message}>{message}</p>}\n    </div>\n  );\n};\n\nexport default ResetarSenha;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}